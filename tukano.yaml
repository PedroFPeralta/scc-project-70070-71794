apiVersion: v1
kind: ConfigMap
metadata:
  name: cosmosdb
data: 
  COSMOSDB_KEY: "u9d2bwdJtw12C6mRwtjvWBw0XeSxb41NqUPXON6mKir7aq4phn2ukBshRHn2dF2i5GQoTYhT8KjAACDb0j612g"
  COSMOSDB_URL: "https://cosmos70070northeurope.documents.azure.com:443/"
  COSMOSDB_DATABASE: "cosmosdb70070"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shorts-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shorts-service
  template:
    metadata:
      labels:
        app: shorts-service    
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: shorts-service
        image: tim0ns/shorts-service:latest
        ports:
        - containerPort: 3000
        env:
        - name: COSMOSDB_KEY  
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_KEY
        - name: COSMOSDB_URL
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_URL
        - name: COSMOSDB_DATABASE  
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_DATABASE
        - name: COSMOSDB_CONTAINER
          value: "shorts"   
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
          limits:
            cpu: 75m
            memory: 128Mi
        startupProbe:
          httpGet:
            path: /
            port: 3000
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          failureThreshold: 5
          initialDelaySeconds: 3
          periodSeconds: 3 

---
apiVersion: v1
kind: Service
metadata:
  name: shorts-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: shorts-service   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service    
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: users-service
        image: tim0ns/users-service:latest
        ports:
        - containerPort: 3002
        env:
        - name: COSMOSDB_KEY  
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_KEY
        - name: COSMOSDB_URL
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_URL
        - name: COSMOSDB_DATABASE  
          valueFrom:
            configMapKeyRef:
              name: cosmosdb
              key: COSMOSDB_DATABASE
        - name: COSMOSDB_CONTAINER
          value: "users"   
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
          limits:
            cpu: 75m
            memory: 128Mi
        startupProbe:
          httpGet:
            path: /
            port: 3002
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3002
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3002
          failureThreshold: 5
          initialDelaySeconds: 3
          periodSeconds: 3     
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3002
    targetPort: 3002
  selector:
    app: users-service  
