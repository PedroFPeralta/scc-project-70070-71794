apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-serivce
spec:
  serviceName: redis-service
  replicas: 3
  selector: 
    matchLabels:
      app: redis-service 
    template:
      metadata:
        labels:
          app: redis-service
      spec:
        containers:
          - name: redis-service
            image: redis:latest
            command: ['redis-server', '/conf/redis.conf']
            env:
              - name: REDIS_CLUSTER_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
            ports:
              - containerPort: 6379
                name: client
              - containerPort: 16379
                name: gossip
            volumeMounts:
              - name: conf
                mountPath: /conf
              - name: data
                mountPath: /data
        volumes:
          - name: conf
            configMap:
              name: redis-cluster-configmap
    volumeClaimTemplates:
      - metadata:
          name: data
        spec:
          accessModes: ['ReadWriteOnce']
          resources:
            requests:
              storage: 1Gi
                          
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-service
  template:
    metadata:
      labels:
        app: redis-service  
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: redis-service
        image: redis:latest    
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip 
--- 
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  type: ClusterIP
  ports:
  - name: client
    port: 6379
  - name: gossip    
    port: 16379
  selector:
    app: redis-service    